webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/SideBar.vue?vue&type=script&lang=js":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader-v16/dist??ref--1-1!./src/components/SideBar.vue?vue&type=script&lang=js ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap */ \"./node_modules/bootstrap/dist/js/bootstrap.esm.js\");\n\nvar toggle = document.getElementById(\"toggleSidebar\");\nvar offcanvas_el = document.getElementById(\"offcanvasExample\");\nvar offcanvas = new bootstrap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Offcanvas(offcanvas_el, {\n  backdrop: false\n});\ntoggle.addEventListener(\"change\", function () {\n  toggle.checked ? offcanvas.show() : offcanvas.hide();\n}); // handle case when sidebar is closed internally using `X`\n\noffcanvas_el.addEventListener('hide.bs.offcanvas', function () {\n  toggle.checked = false;\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'SideBar'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/SideBar.vue?vue&type=script&lang=js\n");

/***/ })

})