webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/SideBar.vue?vue&type=script&lang=js":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader-v16/dist??ref--1-1!./src/components/SideBar.vue?vue&type=script&lang=js ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _assets_expandSidebar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../assets/expandSidebar.js */ \"./src/assets/expandSidebar.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'SideBar',\n  data: function data() {\n    return {};\n  },\n  methods: {\n    expandSidebar: _assets_expandSidebar_js__WEBPACK_IMPORTED_MODULE_0__[\"expandSidebar\"],\n    isMobile: function isMobile() {\n      var sidebar = document.querySelector('.sidebar');\n\n      if (window.innerWidth < 991.5) {\n        sidebar.style.display = \"block\";\n      } else if (window.innerWidth > 991.5) {\n        sidebar.style.display = \"block\";\n        sidebar.style.width = \"5rem\";\n        console.log(\"dsd\");\n      }\n    }\n  },\n  mounted: function mounted() {\n    window.addEventListener(\"resize\", this.isMobile);\n  },\n  computed: {\n    getUserStatus: function getUserStatus() {\n      return this.$store.getters.getUserStatus;\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/SideBar.vue?vue&type=script&lang=js\n");

/***/ })

})